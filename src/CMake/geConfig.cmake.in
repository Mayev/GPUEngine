###############################################################################
# The variables that needs to be set before the call like this
# configure_file(../CMake/geConfig.cmake.in "${LIB_NAME}Config.cmake" @ONLY)
# LIB_NAME - name of the current lib such as geSG
# Internal_deps - internal dependencies for the current lib, means other packages
#                 of this project like geCore
# External_deps - Other dependencies (3rdparties), not all of them are configured
#                 as an import target so futher checking is needed. Currently, if 
#                 the find_package(called for_each External_deps) doesnt produce
#                 target it then uses ${dep}_LIBRARY and ${dep}_INCLUDE_DIR vars
#                 for library (only release build libs should be present) and 
#                 include directories respectively. This way all find module are
#                 expected to produce these variables.
#
##################################################################################


@PACKAGE_INIT@

message(STATUS "@LIB_NAME@ greets downstreamer")
get_filename_component(_@LIB_NAME@_install_prefix "${CMAKE_CURRENT_LIST_DIR}/../../" ABSOLUTE)
include(${_@LIB_NAME@_install_prefix}/cmake/GEMacros.cmake)

if(NOT TARGET @LIB_NAME@)

   add_library(@LIB_NAME@ SHARED IMPORTED)
   #find dependencies
   foreach(_dep @Internal_deps@)
      Find_Package(GPUEngine COMPONENTS ${_dep} ${GPUEngine_FIND_QUIETLY} PATHS "${CMAKE_CURRENT_LIST_DIR}/.." NO_DEFAULT_PATH)
      set_property(TARGET @LIB_NAME@ APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${_dep})
   endforeach()
   
   foreach(_dep @External_deps@)
      Find_Package(${_dep})
      message("neco ${${_dep}_INCLUDE_DIR}")
      if(TARGET ${_dep})
         message("target ${_dep}")
         set_property(TARGET @LIB_NAME@ APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${_dep})
      else()
         message("NOT target ${_dep}")
         set_property(TARGET @LIB_NAME@ APPEND PROPERTY INTERFACE_LINK_LIBRARIES "${${_dep}_LIBRARY}")
         set_property(TARGET @LIB_NAME@ APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${${_dep}_INCLUDE_DIR}")
      endif()      
   endforeach()
   _ge_populate_imported_target(@LIB_NAME@ _@LIB_NAME@_install_prefix @LIB_NAME@ GPUEngine_FIND_REQUIRED_@LIB_NAME@ GPUEngine_FIND_QUIETLY)
   list(APPEND GPUEngine_modules @LIB_NAME@)
   
endif(NOT TARGET @LIB_NAME@)